#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–π RTE Zones
"""

from rte_zones import RTEZoneChecker, check_point_simple, get_delivery_restaurants

def test_basic_functionality():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ RTE Zones")
    print("=" * 40)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    moscow_center = (55.7558, 37.6176)
    spb_center = (59.9311, 30.3609)
    random_point = (55.0000, 50.0000)  # –ì–¥–µ-—Ç–æ –≤ –ø–æ–ª–µ
    
    print("\n1. –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ—á–µ–∫:")
    for lat, lon, name in [moscow_center + ("–¶–µ–Ω—Ç—Ä –ú–æ—Å–∫–≤—ã",), 
                          spb_center + ("–¶–µ–Ω—Ç—Ä –°–ü–±",), 
                          random_point + ("–°–ª—É—á–∞–π–Ω–∞—è —Ç–æ—á–∫–∞",)]:
        result = check_point_simple(lat, lon)
        print(f"   {name}: {'‚úÖ –í –∑–æ–Ω–µ' if result else '‚ùå –ù–µ –≤ –∑–æ–Ω–µ'}")
    
    print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –¥–ª—è —Ü–µ–Ω—Ç—Ä–∞ –ú–æ—Å–∫–≤—ã:")
    restaurants = get_delivery_restaurants(*moscow_center)
    for i, rest in enumerate(restaurants, 1):
        zones_info = f"{len(rest['zones'])} –∑–æ–Ω" if len(rest['zones']) > 1 else "1 –∑–æ–Ω–∞"
        print(f"   {i}. {rest['partner']} (ID: {rest['restaurant_id']}) - {zones_info}")
    
    print("\n3. –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å RTEZoneChecker:")
    checker = RTEZoneChecker('polygons.xlsx')
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–æ–Ω–∞—Ö
    zones = checker.point_in_zones(*moscow_center)
    print(f"   –¢–æ—á–∫–∞ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ {len(zones)} –≥–µ–æ–∑–æ–Ω:")
    for zone in zones:
        print(f"     - {zone['name']} ({zone['–ü–∞—Ä—Ç–Ω–µ—Ä']})")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_basic_functionality()